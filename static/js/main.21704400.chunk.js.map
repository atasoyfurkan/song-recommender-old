{"version":3,"sources":["serviceWorker.js","components/Navbar.js","services/solution.js","components/MySteps.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Text","Header","Navbar","state","drawerVisible","width","innerWidth","MyMenu","props","visible","style","padding","className","theme","mode","vertical","defaultSelectedKeys","Item","onClick","setState","key","addEventListener","this","justify","align","fontSize","fontWeight","marginTop","title","placement","closable","onClose","Component","discoverPlaylist","likedGenres","dislikedGenres","argFeatures","features","Object","keys","map","name","choosenTracks","tracks","track","otherFeatures","distance","getDistance","push","id","artistNames","trackName","sort","a","b","counter","playlist","genres","getTrackGenres","checkIntersection","list1","list2","includes","f","other","filtered","i","length","Math","sqrt","artistName","found","artists","find","artist","Option","Step","Title","MySteps","current","steps","danceability","energy","speechiness","acousticness","instrumentalness","liveness","valence","loading","done","handleSubmit","setTimeout","message","success","FirstStepContent","lg","md","span","placeholder","onChange","value","SecondStepContent","handleSelectChange","ThirdStepContent","sm","xs","label","toUpperCase","substr","min","max","step","margin","console","log","Fragment","spinning","item","type","level","itemLayout","dataSource","renderItem","Meta","Footer","Content","App","paddingBottom","React","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.21704400.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport { Drawer, Layout, Menu, Space, Row, Col, Typography } from 'antd';\n\nconst { Text } = Typography;\nconst { Header } = Layout;\n\nclass Navbar extends Component {\n  state = {\n    drawerVisible: false,\n    width: window.innerWidth\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", () => this.setState({ width: window.innerWidth }));\n  }\n\n  MyMenu = (props) => {\n    if (props.visible)\n      return (\n        <Header style={{ padding: 0 }}>\n          <Menu className=\"bg-header\" theme=\"dark\" mode={props.vertical ? \"vertical\" : \"horizontal\"} defaultSelectedKeys={['2']}>\n            <Menu.Item onClick={() => this.setState({ visible: true })} key=\"1\">nav 1</Menu.Item>\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n      );\n    else return null;\n  }\n\n  render() {\n    const { width } = this.state;\n\n    return (\n      <div className=\"bg-header\">\n        <Row className=\"container\" justify=\"space-between\">\n          <Col className=\"logo\" onClick={() => window.location = \"/song-recommender\"}>\n            <Space align=\"baseline\">\n              <i className=\"icofont-music-alt icofont-2x gray\"></i>\n              <Text className=\"gray\" style={{ fontSize: 23, fontWeight: 800 }}>Song Recommender</Text>\n            </Space>\n          </Col>\n          <Col style={width <= 575 && { marginTop: 4, padding: 15 }}>\n            <Drawer\n              title=\"Navigation\"\n              placement=\"left\"\n              closable={false}\n              onClose={() => this.setState({ drawerVisible: false })}\n              visible={this.state.drawerVisible}\n            >\n              <this.MyMenu vertical={true} visible={width > 575 ? false : true} />\n            </Drawer>\n            <i onClick={() => this.setState({ drawerVisible: true })} className={`icofont-navigation-menu icofont-2x gray header-margin ${width > 575 && \"invisible\"}`} />\n            <this.MyMenu visible={width > 575 ? true : false} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import tracks from \"./tracks.json\";\nimport artists from \"./artists.json\";\n\nexport const discoverPlaylist = (likedGenres, dislikedGenres, argFeatures) => {\n  let features = Object.keys(argFeatures).map((name) => argFeatures[name]);\n\n  let choosenTracks = [];\n  for (const track of tracks) {\n    const otherFeatures = track[4];\n    const distance = getDistance(features, otherFeatures);\n    choosenTracks.push({ id: track[0], distance: distance, artistNames: track[2], trackName: track[1] });\n  }\n  choosenTracks.sort((a, b) => a.distance - b.distance);\n\n  let counter = 0;\n  let playlist = [];\n  for (let track of choosenTracks) {\n    if (counter >= 30) break;\n\n    const genres = getTrackGenres(track.artistNames);\n    if (checkIntersection(likedGenres, genres) && !checkIntersection(dislikedGenres, genres)) {\n      playlist.push(track);\n      counter++;\n    }\n  }\n  return playlist;\n};\n\nconst checkIntersection = (list1, list2) => {\n  for (let a of list1)\n    for (let b of list2)\n      if (a.includes(b)) return true;\n\n  return false;\n}\n\nexport const getDistance = (features, other) => {\n  const filtered = [other[1] * 10, other[2] * 10, other[5] * 10, other[6] * 10, other[7] * 10, other[8] * 10, other[9] * 10, other[10] * 10];\n  let distance = 0;\n\n  for (let i = 0; i < features.length; i++) {\n    distance += (features[i] - filtered[i]) ** 2;\n  }\n  return Math.sqrt(distance);\n}\n\nexport const getTrackGenres = (artistNames) => {\n  let genres = [];\n  for (let artistName of artistNames) {\n    const found = artists.find((artist) => artist[0] === artistName);\n    if (found) genres = [...genres, ...found[1]];\n  }\n  return genres;\n};","import React, { Component } from 'react';\nimport { Steps, Button, message, Select, Row, Col, Form, Slider, InputNumber, Spin, List, Typography } from \"antd\";\nimport { discoverPlaylist } from \"../services/solution\";\n\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { Title } = Typography;\n\n\nclass MySteps extends Component {\n  state = {\n    current: 0,\n    steps: [{ title: \"Liked Genres\" }, { title: \"Disliked Genres\" }, { title: \"Features\" }],\n    likedGenres: [],\n    dislikedGenres: [],\n    features: { danceability: 0, energy: 0, mode: 0, speechiness: 0, acousticness: 0, instrumentalness: 0, liveness: 0, valence: 0 },\n    loading: false,\n    done: false,\n    playlist: []\n  };\n\n  handleSubmit = async () => {\n    this.setState({ loading: true });\n\n    const playlist = discoverPlaylist(this.state.likedGenres, this.state.dislikedGenres, this.state.features);\n\n    setTimeout(() => {\n      this.setState({ loading: false, done: true, playlist: playlist })\n      message.success(\"Process done\");\n    }, 500);\n  };\n\n\n\n  render() {\n    const { current, steps } = this.state;\n\n    console.log(this.state.loading);\n\n    return (\n      <React.Fragment>\n        <section className={this.state.done && \"d-none\"}>\n          <Spin spinning={this.state.loading}>\n\n            <Steps current={current}>\n              {steps.map(item => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n\n            <this.FirstStepContent />\n            <this.SecondStepContent />\n            <this.ThirdStepContent />\n\n            <div className=\"steps-action mt-4\">\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={() => this.setState((state) => ({ current: state.current + 1 }))}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={this.handleSubmit}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: '0 8px' }} onClick={() => this.setState((state) => ({ current: state.current - 1 }))}>\n                  Previous\n                </Button>\n              )}\n            </div>\n          </Spin>\n        </section>\n        <section className={!this.state.done && \"d-none\"}>\n          <Title className={this.state.playlist[0] ? \"\" : \"text-center\"} level={2}>Playlist</Title>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={this.state.playlist}\n            renderItem={item => (\n              <List.Item>\n                <List.Item.Meta\n                  title={`${item.artistNames[0]} - ${item.trackName}`}\n                />\n              </List.Item>\n            )}\n          />\n\n        </section>\n      </React.Fragment>\n    );\n  }\n\n  FirstStepContent = () => {\n    return (\n      <Row className={`${this.state.current !== 0 && \"d-none\"} mt-5`} align=\"center\">\n        <Col lg={8} md={10} span={20}>\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Select Liked Genres\"\n            onChange={(value) => this.setState({ likedGenres: value })}\n          >\n            <Option key={\"rock\"}>Rock</Option>\n            <Option key={\"metal\"}>Metal</Option>\n            <Option key={\"hip hop\"}>Hip Hop</Option>\n            <Option key={\"rap\"}>Rap</Option>\n          </Select>\n        </Col>\n      </Row >\n    );\n  }\n\n  SecondStepContent = () => {\n    return (\n      <Row className={`${this.state.current !== 1 && \"d-none\"} mt-5`} align=\"center\">\n        <Col lg={8} md={10} span={20}>\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Select Disliked Genres\"\n            onChange={this.handleSelectChange}\n          >\n            <Option key={\"rock\"}>Rock</Option>\n            <Option key={\"metal\"}>Metal</Option>\n            <Option key={\"hip hop\"}>Hip Hop</Option>\n            <Option key={\"rap\"}>Rap</Option>\n          </Select>\n        </Col>\n      </Row >\n    );\n  }\n\n  ThirdStepContent = () => {\n    return (\n      <Row className={`${this.state.current !== 2 && \"d-none\"} mt-5`} justify=\"space-between\">\n        {Object.keys(this.state.features).sort().map((name, i) =>\n          <Col key={i} lg={10} span={24}>\n            <Row>\n              <Col sm={7} xs={7}>\n                <Form.Item name={name} label={name[0].toUpperCase() + name.substr(1)}></Form.Item>\n              </Col>\n              <Col sm={12} xs={10}>\n                <Slider\n                  min={0}\n                  max={10}\n                  step={0.1}\n                  onChange={(value) => this.setState((state) => ({ features: { ...state.features, [name]: value } }))}\n                  value={typeof this.state.features[name] === 'number' ? this.state.features[name] : 0}\n                />\n              </Col>\n              <Col sm={5} xs={5}>\n                <InputNumber\n                  min={0}\n                  max={10}\n                  style={{ margin: '0 16px' }}\n                  value={this.state.features[name]}\n                  onChange={(value) => this.setState((state) => ({ features: { ...state.features, [name]: value } }))}\n                />\n              </Col>\n            </Row>\n          </Col>\n        )}\n      </Row >\n    );\n  }\n}\n\n\nexport default MySteps;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport MySteps from \"./components/MySteps\";\nimport { Layout } from \"antd\";\n\nconst { Footer, Content } = Layout;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Navbar />\n        <Content style={{ paddingBottom: 1000 }} className=\"bg-content\">\n          <div className=\"container mt-5\">\n            <MySteps />\n          </div>\n        </Content>\n        <Footer>Footer</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './icofont/icofont.min.css'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}