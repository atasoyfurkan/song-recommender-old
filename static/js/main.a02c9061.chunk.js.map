{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/MySteps.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Text","Header","Navbar","state","drawerVisible","width","innerWidth","MyMenu","props","visible","style","padding","className","theme","mode","vertical","defaultSelectedKeys","Item","onClick","setState","key","addEventListener","this","justify","align","fontSize","fontWeight","marginTop","title","placement","closable","onClose","Component","Option","Step","MySteps","current","steps","likedGenres","dislikedGenres","features","danceability","energy","speechiness","acousticness","instrumentalness","liveness","valence","FirstStepContent","lg","md","span","placeholder","onChange","value","SecondStepContent","handleSelectChange","ThirdStepContent","Object","keys","map","name","i","sm","xs","label","toUpperCase","substr","min","max","step","margin","Fragment","item","length","type","message","success","Footer","Content","App","paddingBottom","React","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a02c9061.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport { Drawer, Layout, Menu, Space, Row, Col, Typography } from 'antd';\n\nconst { Text } = Typography;\nconst { Header } = Layout;\n\nclass Navbar extends Component {\n  state = {\n    drawerVisible: false,\n    width: window.innerWidth\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", () => this.setState({ width: window.innerWidth }));\n  }\n\n  MyMenu = (props) => {\n    if (props.visible)\n      return (\n        <Header style={{ padding: 0 }}>\n          <Menu className=\"bg-header\" theme=\"dark\" mode={props.vertical ? \"vertical\" : \"horizontal\"} defaultSelectedKeys={['2']}>\n            <Menu.Item onClick={() => this.setState({ visible: true })} key=\"1\">nav 1</Menu.Item>\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n      );\n    else return null;\n  }\n\n  render() {\n    const { width } = this.state;\n\n    return (\n      <div className=\"bg-header\">\n        <Row className=\"container\" justify=\"space-between\">\n          <Col className=\"logo\">\n            <Space align=\"baseline\">\n              <i className=\"icofont-music-alt icofont-2x gray\"></i>\n              <Text className=\"gray\" style={{ fontSize: 23, fontWeight: 800 }}>Song Recommender</Text>\n            </Space>\n          </Col>\n          <Col style={width <= 575 && { marginTop: 4, padding: 15 }}>\n            <Drawer\n              title=\"Navigation\"\n              placement=\"left\"\n              closable={false}\n              onClose={() => this.setState({ drawerVisible: false })}\n              visible={this.state.drawerVisible}\n            >\n              <this.MyMenu vertical={true} visible={width > 575 ? false : true} />\n            </Drawer>\n            <i onClick={() => this.setState({ drawerVisible: true })} className={`icofont-navigation-menu icofont-2x gray header-margin ${width > 575 && \"invisible\"}`} />\n            <this.MyMenu visible={width > 575 ? true : false} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Steps, Button, message, Select, Row, Col, Form, Slider, InputNumber } from \"antd\";\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nclass MySteps extends Component {\n  state = {\n    current: 0,\n    steps: [{ title: \"Liked Genres\" }, { title: \"Disliked Genres\" }, { title: \"Features\" }],\n    likedGenres: [],\n    dislikedGenres: [],\n    features: { danceability: 0, energy: 0, mode: 0, speechiness: 0, acousticness: 0, instrumentalness: 0, liveness: 0, valence: 0 }\n  };\n\n  render() {\n    const { current, steps } = this.state;\n\n    return (\n      <React.Fragment>\n        <Steps current={current}>\n          {steps.map(item => (\n            <Step key={item.title} title={item.title} />\n          ))}\n        </Steps>\n\n        <this.FirstStepContent />\n        <this.SecondStepContent />\n        <this.ThirdStepContent />\n\n        <div className=\"steps-action mt-4\">\n          {current < steps.length - 1 && (\n            <Button type=\"primary\" onClick={() => this.setState((state) => ({ current: state.current + 1 }))}>\n              Next\n            </Button>\n          )}\n          {current === steps.length - 1 && (\n            <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n              Done\n            </Button>\n          )}\n          {current > 0 && (\n            <Button style={{ margin: '0 8px' }} onClick={() => this.setState((state) => ({ current: state.current - 1 }))}>\n              Previous\n            </Button>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  FirstStepContent = () => {\n    return (\n      <Row className={`${this.state.current !== 0 && \"d-none\"} mt-5`} align=\"center\">\n        <Col lg={8} md={10} span={20}>\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Select Liked Genres\"\n            onChange={(value) => this.setState({ likedGenres: value })}\n          >\n            <Option key={\"Rock\"}>Rock</Option>\n            <Option key={\"Metal\"}>Metal</Option>\n            <Option key={\"Hip Hop\"}>Hip Hop</Option>\n            <Option key={\"Rap\"}>Rap</Option>\n          </Select>\n        </Col>\n      </Row >\n    );\n  }\n\n  SecondStepContent = () => {\n    return (\n      <Row className={`${this.state.current !== 1 && \"d-none\"} mt-5`} align=\"center\">\n        <Col lg={8} md={10} span={20}>\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Select Disliked Genres\"\n            onChange={this.handleSelectChange}\n          >\n            <Option key={\"Rock\"}>Rock</Option>\n            <Option key={\"Metal\"}>Metal</Option>\n            <Option key={\"Hip Hop\"}>Hip Hop</Option>\n            <Option key={\"Rap\"}>Rap</Option>\n          </Select>\n        </Col>\n      </Row >\n    );\n  }\n\n  ThirdStepContent = () => {\n    return (\n      <Row className={`${this.state.current !== 2 && \"d-none\"} mt-5`} justify=\"space-between\">\n        {Object.keys(this.state.features).map((name, i) =>\n          <Col lg={10} span={24}>\n            <Row>\n              <Col sm={7} xs={7}>\n                <Form.Item name={name} label={name[0].toUpperCase() + name.substr(1)}></Form.Item>\n              </Col>\n              <Col sm={12} xs={10}>\n                <Slider\n                  min={1}\n                  max={10}\n                  step={0.1}\n                  onChange={(value) => this.setState((state) => ({ features: { ...state.features, [name]: value } }))}\n                  value={typeof this.state.features[name] === 'number' ? this.state.features[name] : 0}\n                />\n              </Col>\n              <Col sm={5} xs={5}>\n                <InputNumber\n                  min={1}\n                  max={20}\n                  style={{ margin: '0 16px' }}\n                  value={this.state.features[name]}\n                  onChange={(value) => this.setState((state) => ({ features: { ...state.features, [name]: value } }))}\n                />\n              </Col>\n            </Row>\n          </Col>\n        )}\n      </Row >\n    );\n  }\n}\n\n\nexport default MySteps;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport MySteps from \"./components/MySteps\";\nimport { Layout } from \"antd\";\n\nconst { Footer, Content } = Layout;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Navbar />\n        <Content style={{ paddingBottom: 1000 }} className=\"bg-content\">\n          <div className=\"container mt-5\">\n            <MySteps />\n          </div>\n        </Content>\n        <Footer>Footer</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './icofont/icofont.min.css'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}